version: "3.9"
services:
  db:
    image: postgres:14
    environment:
      POSTGRES_USER: stud
      POSTGRES_PASSWORD: stud
      POSTGRES_DB: user_db
    volumes:
      - db_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - arch-network

  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    networks:
      - arch-network

  mongo:
    image: mongo:5.0
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
    networks:
      - arch-network

  user_service:
    build:
      context: ./user_service
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    volumes:
      - ./user_service:/app
    depends_on:
      - db
    networks:
      - arch-network

  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"
    networks:
      - arch-network
    volumes:
      - zookeeper_data:/opt/zookeeper/data 

  kafka:
    image: wurstmeister/kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_CREATE_TOPICS: incomes:1:1,costs:1:1 
    depends_on:
      - zookeeper
    networks:
      - arch-network
    volumes:
      - kafka_data:/var/lib/kafka/data 

  budget_service:
    build:
      context: ./budget_service
      dockerfile: Dockerfile
    depends_on:
      - kafka
      - mongo
      - user_service
    environment:
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
    ports:
      - "8001:8001"
    networks:
      - arch-network


  receiver:
    build: ./receiver
    depends_on:
      - kafka
    environment:
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
    networks:
      - arch-network



networks:
  arch-network:
    driver: bridge


volumes:
  db_data:
  mongo_data:
  kafka_data:
  zookeeper_data: