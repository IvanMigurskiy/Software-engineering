openapi: 3.0.3
info:
  title: Budget Tracker API
  description: API for Budget Planning System
  version: 1.0.0
servers:
  - url: http://localhost:8000/api
    description: Development server

paths:
  /auth/token:
    post:
      summary: Login For Access Token
      operationId: login_for_access_token
      tags:
        - AuthService
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/LoginRequest'
        required: true
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Token'

  /auth/users/me:
    get:
      summary: Get Current User
      operationId: get_current_user
      tags:
        - AuthService
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
      security:
        - bearerAuth: []

  /incomes/:
    post:
      summary: Create a new income
      operationId: create_income
      tags:
        - BudgetService
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IncomeCreate'
      responses:
        '201':
          description: Income created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Income'

    get:
      summary: Get list of user incomes
      operationId: list_incomes
      tags:
        - BudgetService
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List of incomes
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Income'

  /incomes/{income_id}:
    get:
      summary: Get a specific income by ID
      operationId: get_income
      tags:
        - BudgetService
      security:
        - bearerAuth: []
      parameters:
        - name: income_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Income details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Income'

  /costs/:
    post:
      summary: Create a new cost
      operationId: create_cost
      tags:
        - BudgetService
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CostCreate'
      responses:
        '201':
          description: Cost created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cost'

    get:
      summary: Get list of user costs
      operationId: list_costs
      tags:
        - BudgetService
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List of costs
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Cost'

  /costs/{cost_id}:
    get:
      summary: Get a specific cost by ID
      operationId: get_cost
      tags:
        - BudgetService
      security:
        - bearerAuth: []
      parameters:
        - name: cost_id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Cost details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cost'




  /budget/:
    get:
      summary: Get budget in specific datetime
      operationId: get_budget
      tags:
        - BudgetService
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Budget
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Budget'

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    Role:
      type: string
      enum: [client, admin]
      description: User role in the system

    LoginRequest:
      type: object
      required: [username, password]
      properties:
        username:
          type: string
        password:
          type: string

    Token:
      type: object
      required: [access_token, token_type]
      properties:
        access_token:
          type: string
        token_type:
          type: string
          default: bearer

    User:
      type: object
      required: [user_id, username]
      properties:
        user_id:
          type: integer
        username:
          type: string
        full_name:
          type: string
        role:
          $ref: '#/components/schemas/Role'

    Periodicity:
      type: string
      enum: [once, daily, weekly, monthly]

    Income:
      type: object
      properties:
        income_id:
          type: integer
        title:
          type: string
        description:
          type: string
        value:
          type: integer
        periodicity:
          $ref: '#/components/schemas/Periodicity'
        periodicity_value:
          type: integer
          nullable: true
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        due_date:
          type: string
          format: date
          nullable: true
        assignee_id:
          type: integer
          nullable: true

    IncomeCreate:
      type: object
      required: [title, description]
      properties:
        title:
          type: string
          maxLength: 100
        description:
          type: string
        value:
          type: integer
        periodicity:
          $ref: '#/components/schemas/Periodicity'
          default: once
        periodicity_value:
          type: integer
          nullable: true
        due_date:
          type: string
          format: date
          nullable: true
        assignee_id:
          type: integer
          nullable: true

    Cost:
      type: object
      properties:
        cost_id:
          type: integer
        title:
          type: string
        description:
          type: string
        value:
          type: integer
        periodicity:
          $ref: '#/components/schemas/Periodicity'
        periodicity_value:
          type: integer
          nullable: true
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        due_date:
          type: string
          format: date
          nullable: true
        assignee_id:
          type: integer
          nullable: true

    CostCreate:
      type: object
      required: [title, description]
      properties:
        title:
          type: string
          maxLength: 100
        description:
          type: string
        value:
          type: integer
        periodicity:
          $ref: '#/components/schemas/Periodicity'
          default: once
        periodicity_value:
          type: integer
          nullable: true
        due_date:
          type: string
          format: date
          nullable: true
        assignee_id:
          type: integer
          nullable: true

    Budget:
      type: object
      required: [value, due_date]
      properties:
        value:
          type: integer
        created_at:
          type: string
          format: date-time
        due_date:
          type: string
          format: date

    BudgetCreate:
      type: object
      required: [due_date]
      properties:
        due_date:
          type: string
          format: date
        value:
          type: integer